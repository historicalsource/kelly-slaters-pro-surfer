MAC(FLAG_STASH_ONLY,"STASH_ONLY",0)
MAC(FLAG_NO_CD,"NO_CD",0)
MAC(FLAG_CHATTY_LOAD,"CHATTY_LOAD",0)
MAC(FLAG_LORES_MODELS,"LORES_MODELS",0)
MAC(FLAG_WINDOW_DEFAULT,"WINDOW_DEFAULT",1)
MAC(FLAG_SHOW_FPS,"SHOW_FPS",0)
// Let's not modify this file to do the BOOTABLE
// non-BOOTABLE FPS counter;  let's make sure to
// have the GAME.INI for BOOTABLE have it at 0
// Could mean one less complete rebuild for somebody.
MAC(FLAG_SHOW_STATS,"SHOW_STATS",0)
MAC(FLAG_MEMORY_TRACKING,"MEMORY_TRACKING",0)
MAC(FLAG_LEAK_CHECKING,"LEAK_CHECKING",0)
MAC(FLAG_TEXTURES_LORES,"TEXTURES_LORES",0)
MAC(FLAG_SHOW_DEBUG_INFO,"SHOW_DEBUG_INFO",0)
MAC(FLAG_SHOW_MEMORY_BUDGET,"SHOW_MEMORY_BUDGET",0)
MAC(FLAG_DEBUG_LOG,"DEBUG_LOG",0)
MAC(FLAG_GRAVITY,"GRAVITY",1)
MAC(FLAG_NO_WARNINGS,"NO_WARNINGS",1)
MAC(FLAG_NO_ANIM_WARNINGS,"NO_ANIM_WARNINGS",1)
MAC(FLAG_NO_AUDIO_WARNINGS,"NO_AUDIO_WARNINGS",1)
MAC(FLAG_NO_AUDIO,"NO_AUDIO",0)
MAC(FLAG_NO_RUMBLE,"NO_RUMBLE",0)
MAC(FLAG_NO_REPLAY,"NO_REPLAY",0)
MAC(FLAG_EXTRA_STASH_OUTPUT,"EXTRA_STASH_OUTPUT", 0)
MAC(FLAG_PERFECT_BALANCE,"PERFECT_BALANCE",0)
MAC(FLAG_DEBUG_BALANCE,"DEBUG_BALANCE",0)
MAC(FLAG_NO_LIGHTING_WARNINGS,"NO_LIGHTING_WARNINGS",1)
MAC(FLAG_NO_MESSAGES, "NO_MESSAGES", 0)
MAC(FLAG_LOCK_STEP,"LOCK_STEP",0)
MAC(FLAG_TEXTURE_DUMP,"TEXTURE_DUMP",0)
MAC(FLAG_SOUND_DUMP,"SOUND_DUMP",0)
MAC(FLAG_LOCKED_HERO,"LOCKED_HERO",0)
MAC(FLAG_FOG_OVERRIDE,"FOG_OVERRIDE",0)
MAC(FLAG_FOG_DISABLE,"FOG_DISABLE",0)
MAC(FLAG_MOVE_EDITOR,"MOVE_EDITOR",0)
//MAC(FLAG_INTERFACE_DEBUG,"INTERFACE_DEBUG",0)
MAC(FLAG_AI_PATH_DEBUG,"AI_PATH_DEBUG",1)
MAC(FLAG_AI_PATH_COLOR,"AI_PATH_COLOR",0)
MAC(FLAG_AI_CRITTER_ACTIVITY,"AI_CRITTER_ACTIVITY",0)
MAC(FLAG_AI_PATH_COLOR_CRITTER,"AI_PATH_COLOR_CRITTER",0)
MAC(FLAG_AI_PATH_COLOR_HERO,"AI_PATH_COLOR_HERO",0)
MAC(FLAG_NO_SOUND,"NO_SOUND",0)
MAC(FLAG_NO_PARTICLES,"NO_PARTICLES",0)
MAC(FLAG_NO_BILLBOARDS,"NO_BILLBOARDS",0)
MAC(FLAG_PTREYARCH_FRONTEND,"PTREYARCH_FRONTEND",0)
MAC(FLAG_SHOW_NORMALS,"SHOW_NORMALS",0)
MAC(FLAG_SHOW_PLRCTRL, "SHOW_PLRCTRL", 0)
MAC(FLAG_SHOW_PSX_INFO, "SHOW_PSX_INFO", 0)
MAC(FLAG_FLAT_SHADE,"FLAT_SHADE",0)
//MAC(FLAG_SINGLE_MESH,"SINGLE_MESH",1)
MAC(FLAG_INTERFACE_DISABLE,"INTERFACE_DISABLE",0)
MAC(FLAG_WIDGET_TOOLS,"WIDGET_TOOLS",0)
MAC(FLAG_LIGHTING,"LIGHTING",1)
MAC(FLAG_FAKE_POINT_LIGHTS,"FAKE_POINT_LIGHTS",1)
MAC(FLAG_BSP_SPRAY_PAINT,"BSP_SPRAY_PAINT",0)
//MAC(FLAG_CAMERA_REL_STICK, "CAMERA_REL_STICK", 0)
MAC(FLAG_CAMERA_EDITOR, "CAMERA_EDITOR", 0)
MAC(FLAG_IGNORE_RAMPING, "IGNORE_RAMPING", 0)
//MAC(FLAG_MOVE_INTERRUPT_OK, "MOVE_INTERRUPT_OK", 0)
MAC(FLAG_POINT_SAMPLE, "POINT_SAMPLE", 0)
MAC(FLAG_DISTANCE_FADING,"DISTANCE_FADING", 0)
MAC(FLAG_REPORT_LOAD_SOUND, "REPORT_LOAD_SOUND", 0)
MAC(FLAG_ALLOW_ITEM_PICKUP,"ALLOW_ITEM_PICKUP", 1)

MAC(FLAG_OVERRIDE_CONTROLLER_OPTIONS,"OVERRIDE_CONTROLLER_OPTIONS", 0)
MAC(FLAG_FORCE_DC_START_PROCESSES,"FORCE_DC_START_PROCESSES", 0)
MAC(FLAG_FORCE_PC_MOUSE_OPERATION,"FORCE_PC_MOUSE_OPERATION", 0)

MAC(FLAG_INVERT_MOUSE_Y,"FLAG_INVERT_MOUSE_Y", 0)
MAC(FLAG_INVERT_KEYBOARD_Y, "FLAG_INVERT_KEYBOARD_Y", 0)
MAC(FLAG_INVERT_SNIPER_Y,"FLAG_INVERT_SNIPER_Y", 0)
MAC(FLAG_DISABLE_MOUSE_PLAYER_CONTROL,"DISABLE_MOUSE_PLAYER_CONTROL", 0)

MAC(FLAG_NO_MOVIES,"NO_MOVIES", 0)	// temporary, for press build (dc 03/29/02)
MAC(FLAG_NO_LOAD_SCREEN,"NO_LOAD_SCREEN", 0)
MAC(FLAG_NO_EXCEPTION_HANDLER,"NO_EXCEPTION_HANDLER", 1)

MAC(FLAG_CACHE_TO_DISK,"CACHE_TO_DISK", 1) // if turned on, xbox caching is enabled.

///////////////////////////////////////////////////////////////////////////////
// These flags are used to perform the batch process of creating binary image
// files representing any desired combinations of level and hero.  The list of
// level/hero combinations is given by a file, called "batch_save.txt", expected
// to be found in the ROOT_DIR directory.  Each line of this file should look
// like:
//   levelname  heroname
// and the last line must always be:
//   end
// Before beginning the batch process, you must first create a "restart" image;
// this is done by setting the SAVE_RESTART_IMAGE flag to true (in game.ini).
// After you place the resulting file, found in c:\die2\data and called
// "restart.img", into the GDROM die2\data directory and reset the game, you may
// then set the flag SAVE_LEVEL_IMAGES to true, which will begin the batch
// process according the contents of "batch_save.txt".
// The image files are saved in c:\die2\data, and should be moved to the GDROM
// die2\data directory when ready for use.  The game will automatically load a
// given level/hero combination from the appropriate binary image file if it is
// found on the GDROM.
// Note that these flags must be set true manually via game.ini, rather than
// initialized true here in the code.
// Also note that the restart image created in the above process is also used
// by the game for returning to the main menu (e.g., via Quit Game).
// Finally, there are the flags SAVE_EQUIPMENT_IMAGE and SAVE_CREDITS_IMAGE,
// which create images of the equipment and credits pages, respectively; these
// are utilized in the same manner as SAVE_RESTART_IMAGE.
MAC(FLAG_SAVE_ALL_IMAGES,"SAVE_ALL_IMAGES", 0)
MAC(FLAG_SAVE_PRE_RESTART_IMAGE, "SAVE_PRE_RESTART_IMAGE", 0)
MAC(FLAG_SAVE_RESTART_IMAGE, "SAVE_RESTART_IMAGE", 0)
MAC(FLAG_SAVE_CREDITS_IMAGE, "SAVE_CREDITS_IMAGE", 0)
MAC(FLAG_SAVE_LEVEL_IMAGES, "SAVE_LEVEL_IMAGES", 0)
MAC(FLAG_IMG_FARM, "IMG_FARM", 0)
MAC(FLAG_USE_TGAS, "USE_TGAS", 0)

MAC(FLAG_COMBO_TESTER, "COMBO_TESTER", 0)

MAC(FLAG_DISABLE_ENV_PASS, "DISABLE_ENV_PASS", 0)
MAC(FLAG_DISABLE_DECAL_PASS, "DISABLE_DECAL_PASS", 0)
MAC(FLAG_DISABLE_DETAIL_PASS, "DISABLE_DETAIL_PASS", 0)
MAC(FLAG_DISABLE_SHADOWS, "DISABLE_SHADOWS", 0)

MAC(FLAG_WIREFRAME, "WIREFRAME", 0)

MAC(FLAG_AUTOBUILD, "AUTOBUILD", 0)
MAC(FLAG_FLIPPER, "FLIPPER", 1)
MAC(FLAG_SHOW_LENSFLARE, "LENSFLARE", 1)
MAC(FLAG_SHOW_LENSSPRAY, "LENSSPRAY", 1)
MAC(FLAG_TEST_LENSSPRAY, "TESTSPRAY", 0)
MAC(FLAG_SHOW_MOTIONBLUR, "MOTIONBLUR", 1)
MAC(FLAG_DEMO_MODE, "DEMO_MODE", 1)
MAC(FLAG_NOFLYBY, "NOFLYBY", 0)
MAC(FLAG_MAKE_MOVIE, "MAKE_MOVIE", 0)
MAC(FLAG_ALL_TRICKS, "ALL_TRICKS", 0)
MAC(FLAG_TRIPPY, "TRIPPY", 0)
MAC(FLAG_ASYNC_TEST, "ASYNC_TEST", 0)
MAC(FLAG_MEM_FREE_SCREEN, "MEM_FREE_SCREEN", 0)
MAC(FLAG_DO_CHAR_SCREEN_CAP, "CHAR_SCREEN_CAP", 0)

MAC(FLAG_ALWAYS_CELEBRATE, "ALWAYS_CELEBRATE", 0)

MAC(FLAG_RANDOMIZE_CONTROLLER_1, "RANDOMIZE_CONTROLLER_1", 0)
MAC(FLAG_RANDOMIZE_CONTROLLER_2, "RANDOMIZE_CONTROLLER_2", 0)
MAC(FLAG_RANDOMIZE_CONTROLLER_3, "RANDOMIZE_CONTROLLER_3", 0)
MAC(FLAG_RANDOMIZE_CONTROLLER_4, "RANDOMIZE_CONTROLLER_4", 0)

MAC(FLAG_PRESS_BUILD, "PRESS_BUILD", 0)
MAC(FLAG_E3_BUILD, "E3_BUILD", 0)
MAC(FLAG_DEBUG_MENUS, "DEBUG_MENUS", 1)
MAC(FLAG_REALISTIC_FE, "REALISTIC_FE", 1)
MAC(FLAG_AI_SURFERS, "AI_SURFERS", 1)
MAC(FLAG_PLAY_PLACEHOLDER, "PLAY_PLACEHOLDER", 0)