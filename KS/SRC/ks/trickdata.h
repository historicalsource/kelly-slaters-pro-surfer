/*  THIS FILE IS AUTOMATICALLY GENERATED BY EXPORT FROM THE EXCEL FILE:  TRICKDATA.XLS
    ALL CHANGES SHOULD BE MADE IN EXCEL AND RE_EXPORTED.  DO NOT HAND EDIT.
    JONATHAN WEBSTER, Treyarch, 2/06/02
*/

#ifndef TRICKDATA_H
#define TRICKDATA_H

#include "types.h"
#include "VOEngine.h"
#include "globaltextenum.h"
#include "stringx.h"
#define PAD_U 1
#define PAD_D 2
#define PAD_L 3
#define PAD_R 4
#define PAD_UL 5
#define PAD_UR 6
#define PAD_DL 7
#define PAD_DR 8
#define PAD_CIRCLE 9
#define PAD_CROSS 10
#define PAD_TRIANGLE 11
#define PAD_SQUARE 12
#define PAD_L1 13
#define PAD_L2 14
#define PAD_R1 15
#define PAD_R2 16
#define PAD_RELEASE 17
#define PAD_LAUNCH 18
#define PAD_NONE 255
#define BOARD_ANIM_NULL -1
#define SURFER_ANIM_NULL -1


///   IK flags for trikcs initiated by trick system
const int DoIkFlag          = 0x00001;
const int IkBlendFlag       = 0x00002;
const int BoardNodeFlag     = 0x00004;


enum {
    GAP_TUBE_MID_ANTARCTICA,
    GAP_TUBE_END_ANTARCTICA,
    GAP_TUBE_MID_BELLS,
    GAP_TUBE_END_BELLS,
    GAP_TUBE_MID_CORTESBANK,
    GAP_TUBE_END_CORTESBANK,
    GAP_TUBE_MID_GLAND,
    GAP_TUBE_END_GLAND,
    GAP_TUBE_MID_JAWS,
    GAP_TUBE_END_JAWS,
    GAP_TUBE_MID_JEFFRYSBAY,
    GAP_TUBE_END_JEFFRYSBAY,
    GAP_TUBE_MID_MAVERICKS,
    GAP_TUBE_END_MAVERICKS,
    GAP_TUBE_MID_MUNDAKA,
    GAP_TUBE_END_MUNDAKA,
    GAP_TUBE_MID_PIPELINE,
    GAP_TUBE_END_PIPELINE,
    GAP_TUBE_MID_SEBASTIAN,
    GAP_TUBE_END_SEBASTIAN,
    GAP_TUBE_MID_TEAHUPOO,
    GAP_TUBE_END_TEAHUPOO,
    GAP_TUBE_MID_TRESTLES,
    GAP_TUBE_END_TRESTLES,
    GAP_TUBE_MID_INDOOR,
    GAP_TUBE_END_INDOOR,
    GAP_TUBE_MID_COSMOS,
    GAP_TUBE_END_COSMOS,
    GAP_TUBE_MID_CURRENSPOINT,
    GAP_TUBE_END_CURRENSPOINT,
    GAP_TUBE_MID_BELLSNIGHT,
    GAP_TUBE_END_BELLSNIGHT,
    GAP_TUBE_MID_GLAND2,
    GAP_TUBE_END_GLAND2,
    GAP_TUBE_MID_JAWSBIG,
    GAP_TUBE_END_JAWSBIG,
    GAP_TUBE_MID_KIRRA,
    GAP_TUBE_END_KIRRA,
    GAP_TUBE_MID_KIRRA2,
    GAP_TUBE_END_KIRRA2,
    GAP_TUBE_MID_MAVBIG,
    GAP_TUBE_END_MAVBIG,
    GAP_TUBE_MID_MUNDAKA2,
    GAP_TUBE_END_MUNDAKA2,
    GAP_TUBE_MID_TEANIGHT,
    GAP_TUBE_END_TEANIGHT,
    GAP_TUBE_MID_TEAEVE,
    GAP_TUBE_END_TEAEVE,
    GAP_TUBE_MID_OPENSEA,
    GAP_TUBE_END_OPENSEA,
    GAP_TURTLE_JUMP,
    GAP_KAYAK_JUMP,
    GAP_TUBER_SPRAY,
    GAP_WINDSURFER_SPRAY,
    GAP_ICE_SMASH,
    GAP_JETSKIER_SPRAY,
    GAP_SPONGER_SMASH,
    GAP_ENV_TBD,
    GAP_TURTLE_HOP,
    GAP_PIRATE_JUMP,
    GAP_POP_OFF,
    GAP_SMACK_WINDSURFER,
    GAP_INSANE_TUBE_ENTRY,
    GAP_EXIT_COMBO,
    GAP_BARREL_TAKEOFF,
    GAP_BARREL_FAKIE_TAKEOFF,
    GAP_BARREL_FADE_TAKEOFF,
    GAP_BARREL_FAKIE_FADE_TAKEOFF,
    GAP_FACE_TRICK_ON_ROOF,
    GAP_BUST_WALL_ANTARCTICA,
    GAP_BUST_WALL_BELLS,
    GAP_BUST_WALL_CORTESBANK,
    GAP_BUST_WALL_GLAND,
    GAP_BUST_WALL_JAWS,
    GAP_BUST_WALL_JEFFRYSBAY,
    GAP_BUST_WALL_MAVERICKS,
    GAP_BUST_WALL_MUNDAKA,
    GAP_BUST_WALL_PIPELINE,
    GAP_BUST_WALL_SEBASTIAN,
    GAP_BUST_WALL_TEAHUPOO,
    GAP_BUST_WALL_TRESTLES,
    GAP_BUST_WALL_INDOOR,
    GAP_BUST_WALL_COSMOS,
    GAP_BUST_WALL_CURRENSPOINT,
    GAP_BUST_WALL_BELLSNIGHT,
    GAP_BUST_WALL_GLAND2,
    GAP_BUST_WALL_JAWSBIG,
    GAP_BUST_WALL_KIRRA,
    GAP_BUST_WALL_KIRRA2,
    GAP_BUST_WALL_MAVBIG,
    GAP_BUST_WALL_MUNDAKA2,
    GAP_BUST_WALL_TEANIGHT,
    GAP_BUST_WALL_TEAEVE,
    GAP_BUST_WALL_OPENSEA,
    GAP_ROOF_LAND_ANTARCTICA,
    GAP_ROOF_LAND_BELLS,
    GAP_ROOF_LAND_CORTESBANK,
    GAP_ROOF_LAND_GLAND,
    GAP_ROOF_LAND_JAWS,
    GAP_ROOF_LAND_JEFFRYSBAY,
    GAP_ROOF_LAND_MAVERICKS,
    GAP_ROOF_LAND_MUNDAKA,
    GAP_ROOF_LAND_PIPELINE,
    GAP_ROOF_LAND_SEBASTIAN,
    GAP_ROOF_LAND_TEAHUPOO,
    GAP_ROOF_LAND_TRESTLES,
    GAP_ROOF_LAND_INDOOR,
    GAP_ROOF_LAND_COSMOS,
    GAP_ROOF_LAND_CURRENSPOINT,
    GAP_ROOF_LAND_BELLSNIGHT,
    GAP_ROOF_LAND_GLAND2,
    GAP_ROOF_LAND_JAWSBIG,
    GAP_ROOF_LAND_KIRRA,
    GAP_ROOF_LAND_KIRRA2,
    GAP_ROOF_LAND_MAVBIG,
    GAP_ROOF_LAND_MUNDAKA2,
    GAP_ROOF_LAND_TEANIGHT,
    GAP_ROOF_LAND_TEAEVE,
    GAP_ROOF_LAND_OPENSEA,
    GAP_LITTLE_TUBE_ANTARCTICA,
    GAP_LITTLE_TUBE_BELLS,
    GAP_LITTLE_TUBE_CORTESBANK,
    GAP_LITTLE_TUBE_GLAND,
    GAP_LITTLE_TUBE_JAWS,
    GAP_LITTLE_TUBE_JEFFRYSBAY,
    GAP_LITTLE_TUBE_MAVERICKS,
    GAP_LITTLE_TUBE_MUNDAKA,
    GAP_LITTLE_TUBE_PIPELINE,
    GAP_LITTLE_TUBE_SEBASTIAN,
    GAP_LITTLE_TUBE_TEAHUPOO,
    GAP_LITTLE_TUBE_TRESTLES,
    GAP_LITTLE_TUBE_INDOOR,
    GAP_LITTLE_TUBE_COSMOS,
    GAP_LITTLE_TUBE_CURRENSPOINT,
    GAP_LITTLE_TUBE_BELLSNIGHT,
    GAP_LITTLE_TUBE_GLAND2,
    GAP_LITTLE_TUBE_JAWSBIG,
    GAP_LITTLE_TUBE_KIRRA,
    GAP_LITTLE_TUBE_KIRRA2,
    GAP_LITTLE_TUBE_MAVBIG,
    GAP_LITTLE_TUBE_MUNDAKA2,
    GAP_LITTLE_TUBE_TEANIGHT,
    GAP_LITTLE_TUBE_TEAEVE,
    GAP_LITTLE_TUBE_OPENSEA,
    GAP_TUBE_FLOATER_ANTARCTICA,
    GAP_TUBE_FLOATER_BELLS,
    GAP_TUBE_FLOATER_CORTESBANK,
    GAP_TUBE_FLOATER_GLAND,
    GAP_TUBE_FLOATER_JAWS,
    GAP_TUBE_FLOATER_JEFFRYSBAY,
    GAP_TUBE_FLOATER_MAVERICKS,
    GAP_TUBE_FLOATER_MUNDAKA,
    GAP_TUBE_FLOATER_PIPELINE,
    GAP_TUBE_FLOATER_SEBASTIAN,
    GAP_TUBE_FLOATER_TEAHUPOO,
    GAP_TUBE_FLOATER_TRESTLES,
    GAP_TUBE_FLOATER_INDOOR,
    GAP_TUBE_FLOATER_COSMOS,
    GAP_TUBE_FLOATER_CURRENSPOINT,
    GAP_TUBE_FLOATER_BELLSNIGHT,
    GAP_TUBE_FLOATER_GLAND2,
    GAP_TUBE_FLOATER_JAWSBIG,
    GAP_TUBE_FLOATER_KIRRA,
    GAP_TUBE_FLOATER_KIRRA2,
    GAP_TUBE_FLOATER_MAVBIG,
    GAP_TUBE_FLOATER_MUNDAKA2,
    GAP_TUBE_FLOATER_TEANIGHT,
    GAP_TUBE_FLOATER_TEAEVE,
    GAP_TUBE_FLOATER_OPENSEA,
    GAP_PIER_JUMP,
    GAP_NONE,
    GAP_NUM
};

enum {
    TRICK_NONE,
    TRICK_CARVE,
    TRICK_GRAB,
    TRICK_SNAP,
    TRICK_REVERT_CUTBACK,
    TRICK_REBOUND,
    TRICK_TAIL_CHUCK,
    TRICK_GOUGE,
    TRICK_LAYBACK_SLIDE,
    TRICK_FACE_SHOVEIT,
    TRICK_HANGTEN,
    TRICK_DARKSLIDE,
    TRICK_CHEATERS5,
    TRICK_SITTER,
    TRICK_MANUAL,
    TRICK_HEADSTAND,
    TRICK_CRUZER,
    TRICK_AIR,
    TRICK_HOP,
    TRICK_TUBE_RIDE,
    TRICK_TUBE_RAIL_GRAB,
    TRICK_SUPER_STALL,
    TRICK_ALLEY_OOP,
    TRICK_RODEO,
    TRICK_FRONT_FLIP,
    TRICK_BACK_FLIP,
    TRICK_RIGHT_FLIP,
    TRICK_LEFT_FLIP,
    TRICK_WALK,
    TRICK_HELICOPTER_720,
    TRICK_SUN_CHILD,
    TRICK_TWEAKER,
    TRICK_NACNAC,
    TRICK_CROSS_AIR,
    TRICK_SUPERMAN,
    TRICK_INDIAN,
    TRICK_MONKEYMAN,
    TRICK_JC_AIR,
    TRICK_TRICKBOOK_EXIT,
    TRICK_EXIT,
    TRICK_EXIT_5,
    TRICK_EXIT_6,
    TRICK_EXIT_7,
    TRICK_EXIT_8,
    TRICK_EXIT_1,
    TRICK_EXIT_2,
    TRICK_EXIT_3,
    TRICK_EXIT_4,
    TRICK_JUDO_AIR,
    TRICK_HEEL_FLIP,
    TRICK_KICK_FLIP,
    TRICK_SHOVEIT,
    TRICK_STALEFISH,
    TRICK_METHOD_GRAB,
    TRICK_LIEN_AIR,
    TRICK_SHOVE_THIS,
    TRICK_INDY_GRAB,
    TRICK_MELON_GRAB,
    TRICK_NOSE_GRAB,
    TRICK_NUCLEAR,
    TRICK_MUTE_GRAB,
    TRICK_ROASTBEEF,
    TRICK_ROCKET_GRAB,
    TRICK_TAIL_GRAB,
    TRICK_FLOATER,
    TRICK_FLOAT_RIGHT,
    TRICK_FLOAT_LEFT,
    TRICK_FLOAT_FORWARD,
    TRICK_FLOAT_BACK,
    TRICK_ONE_HAND_ROOF_DRAG,
    TRICK_TWO_HAND_DRAG,
    TRICK_ONE_HAND_DRAG,
    TRICK_GRAB_DRAG_TRICK,
    TRICK_TWO_HAND_ROOF_DRAG,
    TRICK_FOOT_DRAG,
    TRICK_CHRIST_TUBE,
    TRICK_BEHIND_BACK_DRAG,
    TRICK_SPIT_EJECT,
    TRICK_COFFIN,
    TRICK_CAVEMAN,
    TRICK_LAWNDART,
    TRICK_QUICK_CUT_LEFT,
    TRICK_QUICK_CUT_RIGHT,
    TRICK_TAILSLIDE,
    TRICK_TAKEOFF,
    TRICK_FADETAKEOFF,
    TRICK_FAKIETAKEOFF,
    TRICK_FAKIEFADETAKEOFF,
    TRICK_ROUNDHOUSECARVE,
    TRICK_TOPCARVE,
    TRICK_BOTTOMCARVE,
    TRICK_POWERSLIDE,
    TRICK_TOPGRAB,
    TRICK_BOTTOMGRAB,
    TRICK_GRABROUNDHOUSE,
    TRICK_NUM
};

struct SurferTrick
{
    int trick_id;
    int anim_id;
    int board_anim_id;
    int flags;
    int IK_flags;
    int trickbook_type;
    int trick_type;
    uint8 button1;
    uint8 button2;
    uint8 button3;
    char button1_string[16];
    char button2_string[16];
    char button3_string[16];
    int Time;
    int Points;
};


enum TRICKTYPE
{
    TRICKTYPE_AERIAL,
    TRICKTYPE_FLOATER,
    TRICKTYPE_FOAM,
    TRICKTYPE_TUBE_RIDE,
    TRICKTYPE_TUBE,
    TRICKTYPE_TUBE_AND_OUT,
    TRICKTYPE_EXIT,
    TRICKTYPE_SLIDE,
    TRICKTYPE_FACE,
    TRICKTYPE_GRAB,
    TRICKTYPE_CARVE,
    TRICKTYPE_TAKEOFF,
    TRICKTYPE_OTHER,
    TRICKTYPE_NONE          // for ScoringManager purposes only!
};


enum TRICKTYPE_TRICKBOOK
{
    TRICKBOOKTYPE_AERIAL,
    TRICKBOOKTYPE_BARREL,
    TRICKBOOKTYPE_FACETRICK,
    TRICKBOOKTYPE_EXIT_MOVE,
    TRICKBOOKTYPE_NOTYPE,
    TRICKBOOKTYPE_NUMTYPES,
};


struct button_map
{
    stringx str;
    int button;
};

// To be later filled with more interesting information, perhaps.
struct Gap
{
int points;
};


extern const Gap g_gapList[];
extern SurferTrick GTrickList[];
extern const stringx ksGlobalTrickTextArray[];
extern const stringx ksGlobalGapTextArray[];
void TRICKDATA_Load(void);

#endif /* #ifndef TRICKDATA_H */
